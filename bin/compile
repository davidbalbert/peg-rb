#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"

$LOAD_PATH << File.expand_path("../lib", __dir__)
require "peg"
require "peg/codegen"

require "optparse"

usage = "usage: #$0 [options] path/to/grammar.peg class_name"
command = "#$0 " + ARGV.join(" ")

options = {}
OptionParser.new do |opts|
  opts.banner = usage

  opts.on("-oOUTPUT", "--output=OUTPUT", "Write to a file") do |output|
    options[:output] = output
  end

  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end.parse!

unless ARGV.size == 2
  STDERR.puts usage
  exit(1)
end

grammar = File.read(ARGV[0])
class_name = ARGV[1]

grammar = Peg.compile(grammar)
source = grammar.to_rb(class_name)

prelude = <<~END
# Generated by: #{command}
# Do not edit. Edit #{ARGV[0]} instead.

require 'peg/grammar'
require 'peg/runtime'

END

if options[:output]
  File.open(options[:output], "w") do |f|
    f.puts prelude
    f.puts source
  end
else
  puts prelude
  puts source
end
